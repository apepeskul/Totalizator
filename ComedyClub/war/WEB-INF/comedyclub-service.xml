<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">


	<!-- 
			configuration file for dataSource bean
	 -->
	<bean id="configurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="/WEB-INF/jdbc.properties"/>
	</bean>


	<!-- 
			Data connection beans
	 -->
	<bean id="dataSource" 
		class="org.springframework.jdbc.datasource.DriverManagerDataSource" 
		destroy-method="close">
		
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>

	<bean id="hibernateProperties" 
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		
		 <property name="properties">   
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
			</props>
		</property>
	</bean>
	
	<bean id="sessionFactory" 
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		
		<property name="dataSource">
			<ref local="dataSource"/>
		</property>
		
<!--		<property name="mappingLocations">
			<list>
				<value>classpath:test/comedyClub/domain/User.hbm.xml</value>
				<value>classpath:test/comedyClub/domain/Story.hbm.xml</value>
				<value>classpath:test/comedyClub/domain/Rating.hbm.xml</value>				
			</list>
		</property>  -->

		<property name="mappingDirectoryLocations">
			<list>	
			    <value>classpath:com/comedyClub/domain</value>	
			</list>
		</property>

		
		<property name="hibernateProperties">
			<ref local="hibernateProperties" />
		</property>
	</bean>


	<!-- 
			hibernate Template for Dao beans
	 -->	
	<bean id="hibernateTemplate" 
		class="org.springframework.orm.hibernate3.HibernateTemplate">
		
		<property name="sessionFactory" ref="sessionFactory"/>
		<property name="cacheQueries" value="true"/>
	</bean>


	<!-- 
			Dao beans
	 -->	
	<bean id="userDao" class="com.comedyClub.dao.impl.UserDaoImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate"/>
	</bean>
	
	<bean id="storyDao" class="com.comedyClub.dao.impl.StoryDaoImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate"/>
	</bean>
	
	<bean id="ratingDao" class="com.comedyClub.dao.impl.RatingDaoImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate"/>
	</bean>


	
	<!-- 
		Manager services target beans	
	 -->
	<bean id="userManagerServiceTarget" class="com.comedyClub.service.impl.UserManagerServiceImpl">
		<property name="userDao" ref="userDao"/>
	</bean>
	 
	<bean id="storyManagerServiceTarget" class="com.comedyClub.service.impl.StoryManagerServiceImpl">
		<property name="userDao" ref="userDao"/>
		<property name="storyDao" ref="storyDao"/>
	</bean>

	<bean id="ratingManagerServiceTarget" class="com.comedyClub.service.impl.RatingManagerServiceImpl">
		<property name="ratingDao" ref="ratingDao"/>
		<property name="userDao" ref="userDao"/>
		<property name="storyDao" ref="storyDao"/>
	</bean>




    <!-- =================================================================== -->
    <!-- Hibernate Transaction Manager                                       -->
    <!-- =================================================================== -->		
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory"><ref local="sessionFactory"/></property>
	</bean>	


    <!-- =================================================================== -->
    <!-- Transaction-wrapped Services                                        -->
    <!-- =================================================================== -->

	<bean id="userManagerService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="target" ref="userManagerServiceTarget"/>
		<property name="transactionAttributes">
			<props>
				<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="register*">PROPAGATION_REQUIRED</prop>
				<prop key="add*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<bean id="storyManagerService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="target" ref="storyManagerServiceTarget"/>
		<property name="transactionAttributes">
			<props>
				<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="add*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>	

	<bean id="ratingManagerService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="target" ref="ratingManagerServiceTarget"/>
		<property name="transactionAttributes">
			<props>
				<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="add*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>	

	 
</beans>